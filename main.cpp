#include <QCoreApplication>
#include <stdio.h>
#include <iostream>
#include "opencv2/core/core.hpp"
#include "opencv2/features2d/features2d.hpp"
#include "opencv2/nonfree/features2d.hpp"
#include "opencv2/highgui/highgui.hpp"
#include "opencv2/nonfree/nonfree.hpp"
#include "opencv2/legacy/legacy.hpp"
#include "vector"

using namespace cv;
using namespace std;



Mat tpoint1,tpoint2;


    Mat point1 = (Mat_<float>(32,3)<< 362.318181818182,          189.425619834711,1,
                  389.095041322314,           185.45867768595,1,
                  412.896694214876,                     180.5,1,
                  437.690082644628 ,          177.52479338843,1,
                  365.293388429752 ,         220.169421487603,1,
                  391.078512396694,          215.210743801653,1,
                  415.871900826446 ,         211.243801652893,1,
                  438.681818181818 ,         207.276859504132,1,
                  368.268595041322,          250.913223140496,1,
                  393.061983471074,          245.954545454545,1,
                  417.855371900826,          240.004132231405,1,
                  439.673553719008,          235.045454545454,1,
                  371.243801652893,          280.665289256198,1,
                  396.037190082645,          274.714876033058,1,
                  420.830578512397,          267.772727272727,1,
                  442.648760330579,          262.814049586777,1,
                  528.929752066116,          170.582644628099,1,
                  553.723140495868,          171.574380165289,1,
                   579.50826446281,          171.574380165289,1,
                  611.243801652893,          171.574380165289,1,
                  529.921487603306,          201.326446280992,1,
                  554.714876033058,          203.309917355372,1,
                   579.50826446281,          204.301652892562,1,
                  611.243801652893,          207.276859504132,1,
                  529.921487603306,          230.086776859504,1,
                  554.714876033058,          233.061983471074,1,
                             580.5,          236.037190082645,1,
                  610.252066115703,          240.004132231405,1,
                  530.913223140496,          257.855371900826,1,
                  554.714876033058,          262.814049586777,1,
                             580.5,          265.789256198347,1,
                  610.252066115703,          269.756198347107,1);


     Mat point2 = (Mat_<float>(32,3)<<338.51652892562,          190.417355371901,1,
                   371.243801652893,           184.46694214876,1,
                   402.979338842975,           176.53305785124,1,
                   432.731404958678,          169.590909090909,1,
                    345.45867768595,          222.152892561983,1,
                   376.202479338843,          215.210743801653,1,
                   407.938016528926,          208.268595041322,1,
                   438.681818181818,          200.334710743802,1,
                   352.400826446281,          252.896694214876,1,
                   384.136363636364,          244.962809917355,1,
                   414.880165289256,          238.020661157025,1,
                   443.640495867769,          230.086776859504,1,
                   360.334710743802,          283.640495867768,1,
                   389.095041322314,          273.723140495868,1,
                   420.830578512397,          266.780991735537,1,
                   448.599173553719,          259.838842975207,1,
                   525.954545454546,          157.690082644628,1,
                   543.805785123967,          158.681818181818,1,
                   564.632231404959,          158.681818181818,1,
                   588.433884297521,          158.681818181818,1,
                   530.913223140496,          191.409090909091,1,
                   548.764462809918,          192.400826446281,1,
                   568.599173553719,          195.376033057851,1,
                   593.392561983471,          198.351239669421,1,
                   533.888429752066,          223.144628099173,1,
                   552.731404958678,          228.103305785124,1,
                   572.566115702479,          230.086776859504,1,
                   596.367768595041,          236.037190082645,1,
                   538.847107438017,          254.880165289256,1,
                   557.690082644628,          258.847107438016,1,
                    576.53305785124,          264.797520661157,1,
                   601.326446280992,          270.747933884297,1 );


int main(int argc, char *argv[])
{
    QCoreApplication a(argc, argv);


    Mat cameraIntrinsic = (Mat_<float>(3, 3) <<
                           532.574, 0, 318.264,
                                 0, 531.361, 228.96,
                                 0, 0, 1);



    float width = 800;
    float height = 600;
    //Matrix for normalization
    Mat N = (Mat_<float>(3,3)<<
                          2/width,0     ,-1,
                           0,   2/height,-1,
                           0,       0    ,1 );


    transpose(point1,tpoint1);
    transpose(point2,tpoint2);


    Mat x1 = N*tpoint1;

    Mat x2 = N*tpoint2;

    transpose(x1,x1);


    transpose(x2,x2);

    Mat tmp1 = x1(cv::Rect(0,0,2,32));
    Mat tmp2 = x2(cv::Rect(0,0,2,32));


    Mat A = cvCreateMat(32, 9, tmp2.type());
    multiply(tmp1.col(0),tmp2.col(0),A.col(0));
    multiply( tmp1.col(1),tmp2.col(0),A.col(1));
    multiply(tmp2.col(0),point1.col(2),A.col(2));
    multiply(tmp1.col(0),tmp2.col(1),A.col(3));
    multiply( tmp1.col(1),tmp2.col(1),A.col(4));

    multiply(tmp2.col(1),point1.col(2),A.col(5));

    multiply(tmp1.col(0),point1.col(2),A.col(6));

    multiply(tmp1.col(1),point1.col(2),A.col(7));

    multiply(point1.col(2),point1.col(2),A.col(8));

    Mat w,u,vt;


    SVDecomp(A,w,u,vt);


//    cout << w << endl;
//    cout << u << endl;
   Mat V =  vt.row(8);

    return a.exec();
}
